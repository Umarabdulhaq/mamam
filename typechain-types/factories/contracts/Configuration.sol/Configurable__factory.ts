/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Configurable,
  ConfigurableInterface,
} from "../../../contracts/Configuration.sol/Configurable";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transactionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "zkstTransactionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "zkstTokenMinHolding",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "zkstTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "zkstHubWallet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "_config",
    outputs: [
      {
        internalType: "uint256",
        name: "transactionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "zkstTransactionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "zkstTokenMinHolding",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "zkstTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "zkstHubWallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getZksAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "txFee",
        type: "uint256",
      },
    ],
    name: "updateTransactionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "whitelist",
        type: "address[]",
      },
    ],
    name: "updateWhiteList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "Zkst",
        type: "address",
      },
    ],
    name: "updateZksAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ZkstHubWallet",
        type: "address",
      },
    ],
    name: "updateZkstHubWalletAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "zkstHolding",
        type: "uint256",
      },
    ],
    name: "updateZkstTokenMinHolding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "txFee",
        type: "uint256",
      },
    ],
    name: "updateZkstTransactionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type ConfigurableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigurableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Configurable__factory extends ContractFactory {
  constructor(...args: ConfigurableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    transactionFee: PromiseOrValue<BigNumberish>,
    zkstTransactionFee: PromiseOrValue<BigNumberish>,
    zkstTokenMinHolding: PromiseOrValue<BigNumberish>,
    zkstTokenAddress: PromiseOrValue<string>,
    zkstHubWallet: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Configurable> {
    return super.deploy(
      transactionFee,
      zkstTransactionFee,
      zkstTokenMinHolding,
      zkstTokenAddress,
      zkstHubWallet,
      overrides || {}
    ) as Promise<Configurable>;
  }
  override getDeployTransaction(
    transactionFee: PromiseOrValue<BigNumberish>,
    zkstTransactionFee: PromiseOrValue<BigNumberish>,
    zkstTokenMinHolding: PromiseOrValue<BigNumberish>,
    zkstTokenAddress: PromiseOrValue<string>,
    zkstHubWallet: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      transactionFee,
      zkstTransactionFee,
      zkstTokenMinHolding,
      zkstTokenAddress,
      zkstHubWallet,
      overrides || {}
    );
  }
  override attach(address: string): Configurable {
    return super.attach(address) as Configurable;
  }
  override connect(signer: Signer): Configurable__factory {
    return super.connect(signer) as Configurable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigurableInterface {
    return new utils.Interface(_abi) as ConfigurableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Configurable {
    return new Contract(address, _abi, signerOrProvider) as Configurable;
  }
}
